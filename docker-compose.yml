version: '3'

services:
  gateway-service:
    image: 'gateway-service:latest'
    container_name: gateway-service
    build:
      context: gateway-service
      dockerfile: Dockerfile
    environment:
      - spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
      - spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
    expose:
      - "8080"
    ports:
      - "8080:8080"
  auth-service:
      image: 'auth-service:latest'
      container_name: auth-service
      build:
        context: auth-service
        dockerfile: Dockerfile
      depends_on:
        - user-db
      environment:
        - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user_db
        - SPRING_DATASOURCE_USERNAME=user_db
        - SPRING_DATASOURCE_PASSWORD=user_db
        - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
        - SERVER_PORT=8086
        - RSA_PRIVATE-KEY=/app/certs/private.pem
        - RSA_PUBLIC-KEY=/app/certs/public.pem
      expose:
        - "8086"
      ports:
        - "8086:8086"
      volumes:
        - ./auth-service/src/main/resources/certs:/app/certs
#   category-service:
#     image: 'category-service:latest'
#     container_name: category-service
#     build:
#       context: category-service
#       dockerfile: Dockerfile
#     depends_on:
#       - db
#     environment:
#       - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db
#       - SPRING_DATASOURCE_USERNAME=root
#       - SPRING_DATASOURCE_PASSWORD=root
#       - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#       - SERVER_PORT=8083
#     ports:
#       - "8083:8083"
#   product-service:
#     image: 'product-service:latest'
#     container_name: product-service
#     build:
#       context: product-service
#       dockerfile: Dockerfile
#     depends_on:
#       - db
#     environment:
#       - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db
#       - SPRING_DATASOURCE_USERNAME=root
#       - SPRING_DATASOURCE_PASSWORD=root
#       - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#       - SERVER_PORT=8084
#     ports:
#       - "8084:8084"
#   order-service:
#     image: 'order-service:latest'
#     container_name: order-service
#     build:
#       context: order-service
#       dockerfile: Dockerfile
#     depends_on:
#       - db
#       - redis
#     environment:
#       - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db
#       - SPRING_DATASOURCE_USERNAME=root
#       - SPRING_DATASOURCE_PASSWORD=root
#       - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
#       - SERVER_PORT=8085
#       - SPRING_REDIS_HOST=redis
#       - SPRING_REDIS_PORT=6379
#     ports:
#       - "8085:8085"
#   user-service:
#     image: 'user-service:latest'
#     container_name: user-service
#     build:
#       context: user-service
#       dockerfile: Dockerfile
#     depends_on:
#       - user-db
#     environment:
#       - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user_db
#       - SPRING_DATASOURCE_USERNAME=user_db
#       - SPRING_DATASOURCE_PASSWORD=user_db
#       - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#       - SPRING_RABBITMQ_HOST=rabbitmq
#       - SPRING_RABBITMQ_PORT=5672
#       - SPRING_RABBITMQ_USERNAME=guest
#       - SPRING_RABBITMQ_PASSWORD=guest
#       - RABBITMQ_EXCHANGE_NAME=email_exchange
#       - RABBITMQ_QUEUE_JSON_NAME=email
#       - RABBITMQ_ROUTING_JSON_KEY=email_routing_json_key
#       - QUEUE_NAME=email
#       - SERVER_PORT=8082
#     ports:
#       - "8082:8082"
#   email-service:
#     image: 'email-service:latest'
#     container_name: email-service
#     build:
#       context: email-service
#       dockerfile: Dockerfile
#     environment:
#       - SPRING_RABBITMQ_HOST=rabbitmq
#       - SPRING_RABBITMQ_PORT=5672
#       - SPRING_RABBITMQ_USERNAME=guest
#       - SPRING_RABBITMQ_PASSWORD=guest
#       - RABBITMQ_EXCHANGE_NAME=email_exchange
#       - RABBITMQ_QUEUE_JSON_NAME=email
#       - RABBITMQ_ROUTING_JSON_KEY=email_routing_json_key
#       - QUEUE_NAME=email
#       - SPRING_MAIL_HOST=smtp.gmail.com
#       - SPRING_MAIL_USERNAME=kayzeel15@gmail.com
#       - SPRING_MAIL_PASSWORD=yrcswoesousqddmw
#       - SPRING_MAIL_PROPERTIES_MAIL_TRANSPORT_PROTOCOL=smtp
#       - SPRING_MAIL_PROPERTIES_MAIL_SMTP_PORT=25
#       - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=true
#       - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=true
#       - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED=true
#       - SERVER_PORT=8087
#     ports:
#       - "8087:8087"

  db:
    image: 'postgres:15-alpine'
    container_name: db
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=db
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5439:5432"
  user-db:
    image: 'postgres:15-alpine'
    container_name: user-db
    environment:
      - POSTGRES_USER=user_db
      - POSTGRES_PASSWORD=user_db
      - POSTGRES_DB=user_db
    volumes:
      - user_db:/var/lib/postgresql/data
    ports:
      - "5438:5432"

  redis:
    image: redis:6.2.4-alpine
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq-broker
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbit_mq:/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/

volumes:
  db:
  redis:
  user_db:
  rabbit_mq:
